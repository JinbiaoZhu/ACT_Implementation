exp_name: "ACT-Maniskill"

# ==========> 环境信息
envs:
  env_id: "PickCube-v1"
  max_episode_steps: 100

# ==========> 模型信息
chunk_size: 10
d_model: 512
d_proprioception: ???
d_action: ???
d_z_distribution: 32
d_feedforward: 2048
n_head: 8
n_representation_encoder_layers: 3
n_encoder_layers: 3
n_decoder_layers: 6
dropout: 0.1
activation: "relu"
normalize_before: false

# ==========> 视觉骨干
resnet_name: resnet18
return_interm_layers: false

# ==========> 训练和评估
seed: 42  # 随机数种子
torch_deterministic: true
cuda: true
batch_size: 64
total_iters: 50000  # 每一个 iter 从数据集中获得一个 batch 信息, 做一次梯度下降
eval_frequency: 1000  # 把模型放到仿真环境的评估的频率
log_frequency: 1  # 损失函数数值记录的频率, 1 表示每次梯度下降都记录
save_frequency: 1000  # 模型保存的频率
num_eval_envs: 10  # 仿真器评估环境中的并行环境数
num_eval_episodes: 10  # 仿真器中每个并行环境跑了多少 episodes
capture_video: true  # 录制视频
lr: 0.0001  # 模型的学习率
lr_backbone: 0.00001  # 视觉骨干模型的全参微调学习率
weight_decay: 0.0001  # 权重衰减
kl_weight: 1  # kl 散度做梯度下降的优先级

# ==========> 数据集
dataset:
  path: "/home/zjb/.maniskill/demos/PickCube-v1/motionplanning/trajectory.rgb.pd_ee_delta_pos.physx_cpu.h5"
  num_traj: 300  # 从数据集中获得演示轨迹的数量
  control_mode: "pd_ee_delta_pos"
  # 控制模式用于设置将模型直接放置于仿真环境的环境类型
  # 控制模型要与模仿学习数据集内设定的控制模式一致!
  num_dataload_workers: 0

# ==========> 训练记录器
wandb:
  need: true
  project_name: "New-ACT-Maniskill"

# ==========> 其他一些参数
sim_backend: "physx_cpu"  # 仿真器获取数据的模式, 如果是 'cpu' 则读取到的数据存储于 cpu 中
include_depth: false
